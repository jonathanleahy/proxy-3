FROM golang:alpine

# Install ca-certificates
RUN apk add --no-cache ca-certificates

# Copy and install mitmproxy certificate
COPY mitmproxy-ca.pem /usr/local/share/ca-certificates/mitmproxy.crt
RUN update-ca-certificates

# Set certificate environment
ENV SSL_CERT_DIR=/etc/ssl/certs
ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt

WORKDIR /app

# Create test Go app
COPY <<'EOF' main.go
package main

import (
    "fmt"
    "io"
    "net/http"
    "os"
)

func main() {
    // No InsecureSkipVerify needed!
    client := &http.Client{}
    
    req, _ := http.NewRequest("GET", "https://api.github.com", nil)
    
    // Use proxy from environment
    if proxy := os.Getenv("HTTP_PROXY"); proxy != "" {
        fmt.Printf("Using proxy: %s\n", proxy)
    }
    
    resp, err := client.Do(req)
    if err != nil {
        fmt.Printf("Error: %v\n", err)
        return
    }
    defer resp.Body.Close()
    
    body, _ := io.ReadAll(resp.Body)
    fmt.Printf("Success! Got %d bytes\n", len(body))
    fmt.Println("NO --insecure or InsecureSkipVerify needed!")
}
EOF

CMD ["go", "run", "main.go"]