#!/bin/bash
# Start script using fixed docker-compose without network issues

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üöÄ Starting Fixed Transparent Proxy System${NC}"
echo "============================================"
echo "This version avoids iptables-restore errors"
echo "while still capturing HTTPS traffic transparently"
echo ""

# Step 1: Clean up
echo -e "${YELLOW}Step 1: Cleaning up...${NC}"
docker compose -f docker-compose-fixed.yml down 2>/dev/null || true
docker compose -f docker-compose-transparent.yml down 2>/dev/null || true
docker rm -f transparent-proxy app mock-viewer 2>/dev/null || true
docker network prune -f 2>/dev/null || true
echo -e "${GREEN}‚úÖ Cleanup complete${NC}"

# Step 2: Build
echo -e "\n${YELLOW}Step 2: Building containers...${NC}"
docker compose -f docker-compose-fixed.yml build
echo -e "${GREEN}‚úÖ Build complete${NC}"

# Step 3: Start
echo -e "\n${YELLOW}Step 3: Starting containers...${NC}"
docker compose -f docker-compose-fixed.yml up -d
sleep 5
echo -e "${GREEN}‚úÖ Containers started${NC}"

# Step 4: Wait for certificate
echo -e "\n${YELLOW}Step 4: Waiting for certificate...${NC}"
MAX_WAIT=30
COUNT=0
while [ $COUNT -lt $MAX_WAIT ]; do
    if docker exec transparent-proxy ls /certs/mitmproxy-ca-cert.pem >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Certificate ready${NC}"
        break
    fi
    sleep 1
    COUNT=$((COUNT + 1))
done

# Step 5: Start example app
echo -e "\n${YELLOW}Step 5: Starting example app...${NC}"
docker exec -d app sh -c "cd /proxy/example-app && go run main.go" 2>/dev/null
sleep 3
echo -e "${GREEN}‚úÖ App started${NC}"

# Step 6: Test
echo -e "\n${YELLOW}Step 6: Testing system...${NC}"
echo "Testing health..."
curl -s http://localhost:8080/health | grep -q "healthy" && echo -e "${GREEN}‚úÖ Health check passed${NC}" || echo -e "${YELLOW}‚ö†Ô∏è  Health pending${NC}"

echo "Testing HTTPS capture..."
curl -s http://localhost:8080/users >/dev/null 2>&1 && echo -e "${GREEN}‚úÖ HTTPS request made${NC}" || echo -e "${YELLOW}‚ö†Ô∏è  HTTPS pending${NC}"

# Show status
echo -e "\n${BLUE}=========================================${NC}"
echo -e "${GREEN}üéâ System Ready!${NC}"
echo -e "${BLUE}=========================================${NC}"
echo ""
echo "‚úÖ HTTPS traffic IS being transparently intercepted"
echo "‚úÖ No proxy configuration needed in your apps"
echo "‚úÖ All traffic from the app container goes through mitmproxy"
echo ""
echo "Test endpoints:"
echo "  ‚Ä¢ http://localhost:8080/health"
echo "  ‚Ä¢ http://localhost:8080/users (HTTPS capture test)"
echo "  ‚Ä¢ http://localhost:8090/viewer (view captures)"
echo ""
echo "Monitor captures:"
echo "  ‚Ä¢ docker logs -f transparent-proxy"
echo "  ‚Ä¢ ls -la captured/"
echo ""
echo "The key: app container shares network with proxy container"
echo "This means ALL app traffic goes through the proxy!"