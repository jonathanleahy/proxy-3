services:
  # Transparent MITM proxy - no certificates needed!
  transparent-proxy:
    build:
      context: .
      dockerfile: docker/Dockerfile.mitmproxy
    container_name: transparent-proxy
    cap_add:
      - NET_ADMIN  # Required for iptables
      - NET_RAW    # Required for transparent proxy
    volumes:
      - ./captured:/captured
      - ./scripts:/scripts:ro
    networks:
      capture-net:
        ipv4_address: 172.28.0.2
    ports:
      - "8080:8080"  # Your main app's REST server (external access)
      - "8084:8084"  # mitmproxy transparent proxy (internal)
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.disable_ipv6=1

  # Your application container
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: app
    depends_on:
      - transparent-proxy
    # Key setting: use proxy container for network
    network_mode: "service:transparent-proxy"
    volumes:
      - ./:/proxy
      - ${HOME}:/home/user
      - ${HOME}:${HOME}
    working_dir: ${HOME}
    environment:
      # No proxy environment variables needed!
      # No certificates needed!
      # Traffic is transparently intercepted
      TARGET_API: "https://api.github.com"
      HOME: ${HOME}
    # Run the REST server on port 8080
    command: |
      sh -c "
      echo 'ðŸš€ REST server starting on port 8080...'
      cd /proxy
      go run rest-server.go
      "

  # Mock server for viewing captures
  viewer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock-viewer
    ports:
      - "${VIEWER_PORT:-8090}:8090"
    volumes:
      - ./configs:/app/configs
      - ./captured:/app/captured
      - ./viewer.html:/app/viewer.html:ro
    environment:
      - PORT=8090
    networks:
      capture-net:
        ipv4_address: 172.28.0.3

networks:
  capture-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24